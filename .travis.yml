language: cpp
dist: trusty
sudo: required
matrix:
  include:
  - os: linux
    compiler: clang
    before_install:
    - sudo add-apt-repository ppa:kubuntu-ppa/backports -y
    - sudo apt-get -qq update
    - sudo apt-get install -y libboost-system-dev libgtest-dev
    - sudo apt-get install --only-upgrade cmake
    - g++ -v
    
  - os: linux
    compiler: gcc
    env:
      - COMPILER=g++-4.9
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: [g++-4.9, valgrind]
    before_install:
    - CXX=$COMPILER
    - sudo add-apt-repository ppa:kubuntu-ppa/backports -y
    - sudo apt-get -qq update
    - sudo apt-get install -y libboost-system-dev libgtest-dev
    - sudo apt-get install --only-upgrade cmake

  - os: linux
    compiler: gcc
    env:
      - COMPILER=g++-5
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: [g++-5, valgrind]
    before_install:
    - CXX=$COMPILER
    - sudo add-apt-repository ppa:kubuntu-ppa/backports -y
    - sudo apt-get -qq update
    - sudo apt-get install -y libboost-system-dev libgtest-dev
    - sudo apt-get install --only-upgrade cmake
    
  - os: linux
    compiler: gcc
    env:
      - COMPILER=g++-6
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: [g++-6, valgrind]
    before_install:
    - CXX=$COMPILER
    - sudo add-apt-repository ppa:kubuntu-ppa/backports -y
    - sudo apt-get -qq update
    - sudo apt-get install -y libboost-system-dev libgtest-dev
    - sudo apt-get install --only-upgrade cmake
    
  - os: linux
    compiler: gcc
    env:
      - COMPILER=g++-7
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: [g++-7, valgrind]
    before_install:
    - CXX=$COMPILER
    - sudo add-apt-repository ppa:kubuntu-ppa/backports -y
    - sudo apt-get -qq update
    - sudo apt-get install -y libboost-system-dev libgtest-dev
    - sudo apt-get install --only-upgrade cmake
    
#  - os: osx
#    compiler: clang
#    osx_image: xcode8
#     - sudo port install boost
#     - g++ -v
#     - cmake -v
    
install:
 - cmake --version 
 - uname -a

## GTest
 - wget -O gtest.tar.gz https://github.com/google/googletest/archive/release-1.7.0.tar.gz
 - tar xf gtest.tar.gz
 - cd googletest-release-1.7.0
 - cmake -DBUILD_SHARED_LIBS=ON .
 - make
 - ls -l
 - sudo cp -a include/gtest /usr/include
 - sudo cp -a libgtest_main.* libgtest.* /usr/lib/
 - cd ..

## Easylogging++
 - wget https://github.com/muflihun/easyloggingpp/archive/develop.zip
 - unzip develop.zip
 - cd easyloggingpp-develop
 - cmake .
 - make
 - sudo make install

## Crypto++ (We dont need this for residue, we need it for ripe)
# - wget https://raw.githubusercontent.com/muflihun/muflihun.github.io/master/downloads/cryptocpp.tar.gz
# - tar xf cryptocpp.tar.gz
# - cd cryptopp-CRYPTOPP_5_6_5
# - wget https://raw.githubusercontent.com/muflihun/muflihun.github.io/master/downloads/pem_pack.zip
# - unzip pem_pack.zip
# - cmake .
# - make
# - sudo make install

## Ripe
# - RIPE_VERSION=3.3.0
# - wget -O ripe-code.zip https://github.com/muflihun/ripe/archive/v$RIPE_VERSION.zip
# - unzip ripe-code.zip
# - cd ripe-$RIPE_VERSION
# - cmake .
# - make
# - ls -l
# - sudo make install

## Ripe Binaries
 - wget -O ripe-bin.zip https://github.com/muflihun/ripe/releases/download/v4.0.0/ripe-4.0.0-x86_64-linux.zip
 - unzip ripe-bin.zip
# - tar xfz ripe-bin.tar.gz
# - cd ripe-4.0.0-x86_64-linux
 - ls -l
 - sudo cp libripe* /usr/lib/
 - sudo cp ripe* /usr/bin/
 - wget https://github.com/muflihun/ripe/releases/download/v4.0.0/Ripe.h
 - sudo cp Ripe.h /usr/include/

## Set env variable for ripe
 - echo $LD_LIBRARY_PATH
 - export LD_LIBRARY_PATH=/usr/lib:$LD_LIBRARY_PATH
 - export RIPE="sudo LD_LIBRARY_PATH=$LD_LIBRARY_PATH ripe"
 - $RIPE --version

## Build
 - cd "${TRAVIS_BUILD_DIR}"
 - mkdir build
 - cd build
 - cmake -Dtest=OFF -Dtravis=ON  -DRIPE_INCLUDE_DIR=/usr/include -DRIPE_LIBRARY=/usr/lib/libripe.so.4.0.0 ..
 - sudo make VERBOSE=1
 - sudo make install
 - cmake -Dtest=ON -Dtravis=ON  -DRIPE_INCLUDE_DIR=/usr/include -DRIPE_LIBRARY=/usr/lib/libripe.so.4.0.0 ..

script: "sudo make VERBOSE=1 && ./residue-cpp-unit-tests"
branches:
  only:
    - master
    - develop
