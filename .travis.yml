language: cpp
dist: trusty
sudo: required
os:
  - linux
#  - osx

matrix:
  include:
  - os: linux
    compiler: clang
    env:
      - COMPILER=g++
    
  - os: linux
    compiler: gcc
    env:
      - COMPILER=g++-4.8
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: [g++-4.8, valgrind]
    
  - os: linux
    compiler: gcc
    env:
      - COMPILER=g++-4.9
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: [g++-4.9, valgrind]

  - os: linux
    compiler: gcc
    env:
      - COMPILER=g++-5
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: [g++-5, valgrind]
    
  - os: linux
    compiler: gcc
    env:
      - COMPILER=g++-6
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: [g++-6, valgrind]
    
  - os: linux
    compiler: gcc
    env:
      - COMPILER=g++-7
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: [g++-7, valgrind]
    
#  - os: osx
#    compiler: clang
#    osx_image: xcode8
#     - g++ -v
#     - cmake -v
    
install:
 - uname -a
 - CXX=$COMPILER
 - sudo add-apt-repository ppa:kubuntu-ppa/backports -y
 - sudo apt-get -qq update
 - sudo apt-get install --only-upgrade cmake
 - $CXX --version
 - cmake --version 
 - export SPECIAL_EDITION=ON

## GTest
 - wget -O gtest.tar.gz https://github.com/google/googletest/archive/release-1.7.0.tar.gz
 - tar xf gtest.tar.gz
 - cd googletest-release-1.7.0
 - cmake -DBUILD_SHARED_LIBS=ON .
 - make
 - ls -l
 - sudo cp -a include/gtest /usr/include
 - sudo cp -a libgtest_main.* libgtest.* /usr/lib/
 - cd ..

## Easylogging++
 - wget https://github.com/abumq/easyloggingpp/archive/develop.zip
 - unzip develop.zip
 - cd easyloggingpp-develop
 - cmake .
 - make
 - sudo make install

## Crypto++
 - wget https://raw.githubusercontent.com/abumq/abumq.github.io/master/downloads/cryptocpp.tar.gz
 - tar xf cryptocpp.tar.gz
 - cd cryptopp-CRYPTOPP_5_6_5
 - wget https://raw.githubusercontent.com/abumq/abumq.github.io/master/downloads/pem_pack.zip
 - unzip pem_pack.zip
 - cmake .
 - make -j4
 - sudo make install

## Build
 - cd "${TRAVIS_BUILD_DIR}"
 - mkdir build
 - cd build
 - cmake -Dtest=OFF -Dtravis=ON -Dspecial_edition=ON ..
 - sudo make VERBOSE=1
 - sudo make install
 - cmake -Dtest=ON -Dspecial_edition=ON -Dtravis=ON ..

script: "sudo make VERBOSE=1 && ./residue-cpp-unit-tests"
branches:
  only:
    - master
    - develop
